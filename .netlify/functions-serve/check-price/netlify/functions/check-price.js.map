{
  "version": 3,
  "sources": ["../../../../Desktop/web/criptorder/netlify/functions/check-price.ts"],
  "sourceRoot": "C:/Users/asus1/AppData/Local/Temp/tmp-22840-lQhYeg2rAtP5",
  "sourcesContent": ["import type { Handler } from \"@netlify/functions\";\r\nimport webpush from \"web-push\";\r\n\r\ntype Order = {\r\n  id: string;\r\n  ts: number;\r\n  asset: string;\r\n  qty: number;\r\n  price: number;\r\n  side?: \"BUY\" | \"SELL\";\r\n};\r\n\r\nconst SUBS_KEY = \"subs.json\"; // lo llena save-subscription\r\nconst ORDERS_KEY = \"orders.json\";\r\nconst PREV_SIGNS_KEY = \"prev-signs.json\";\r\nconst FEE = 0.0015; // 0.15% solo en el cierre\r\n\r\nconst BINANCE = (sym: string) =>\r\n  `https://api.binance.com/api/v3/ticker/price?symbol=${sym}USDT`;\r\n\r\nfunction diffBruto(o: Order, current: number) {\r\n  const side = o.side ?? \"SELL\";\r\n  return side === \"SELL\"\r\n    ? (o.price - current) * o.qty\r\n    : (current - o.price) * o.qty;\r\n}\r\nfunction feeCierreUSD(o: Order, current: number) {\r\n  return o.qty * current * FEE; // tu modelo \u201Csolo fee de cierre\u201D\r\n}\r\n\r\nexport const handler: Handler = async (_evt, ctx) => {\r\n  // Blobs\r\n  // @ts-ignore\r\n  const blob = ctx?.blob || (globalThis as any).netlify?.blobs;\r\n\r\n  // Cargar subs/acuerdos/prev_signs\r\n  const subsR = await blob.get(SUBS_KEY);\r\n  const subs: any[] = subsR ? JSON.parse(await subsR.text()) : [];\r\n  if (!subs.length) return { statusCode: 200, body: \"no subs\" };\r\n\r\n  const ordersR = await blob.get(ORDERS_KEY);\r\n  const orders: Order[] = ordersR ? JSON.parse(await ordersR.text()) : [];\r\n  if (!orders.length) return { statusCode: 200, body: \"no orders\" };\r\n\r\n  const prevR = await blob.get(PREV_SIGNS_KEY);\r\n  let prev: Record<string, number> = prevR\r\n    ? JSON.parse(await prevR.text())\r\n    : {};\r\n\r\n  // Precios \u00FAnicos\r\n  const syms = [...new Set(orders.map((o) => o.asset.toUpperCase()))];\r\n  const prices: Record<string, number> = {};\r\n  for (const s of syms) {\r\n    try {\r\n      const r = await fetch(BINANCE(s));\r\n      const j = await r.json();\r\n      prices[s] = Number(j.price);\r\n    } catch {}\r\n  }\r\n\r\n  // Configurar WebPush\r\n  webpush.setVapidDetails(\r\n    \"mailto:you@example.com\",\r\n    process.env.VAPID_PUBLIC_KEY as string,\r\n    process.env.VAPID_PRIVATE_KEY as string\r\n  );\r\n\r\n  // Evaluar cruces y notificar\r\n  let pushes = 0;\r\n  for (const o of orders) {\r\n    const current = prices[o.asset.toUpperCase()] || 0;\r\n    if (!current) continue;\r\n\r\n    const bruto = diffBruto(o, current);\r\n    const neto = bruto - feeCierreUSD(o, current);\r\n    const newSign = neto > 0 ? 1 : neto < 0 ? -1 : 0;\r\n    const oldSign = prev[o.id] ?? 0;\r\n\r\n    if (oldSign <= 0 && newSign > 0) {\r\n      const title = `Ganancia en ${o.asset}`;\r\n      const body = `Neto: ${neto >= 0 ? \"+\" : \"\"}${neto.toFixed(\r\n        2\r\n      )} USD (precio ${current.toFixed(2)})`;\r\n      for (const s of subs) {\r\n        try {\r\n          await webpush.sendNotification(s, JSON.stringify({ title, body }));\r\n          pushes++;\r\n        } catch {}\r\n      }\r\n    }\r\n    prev[o.id] = newSign;\r\n  }\r\n\r\n  // Persistir prev_signs\r\n  await blob.set(PREV_SIGNS_KEY, JSON.stringify(prev), {\r\n    contentType: \"application/json\",\r\n  });\r\n\r\n  return { statusCode: 200, body: `ok pushes=${pushes}` };\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAAoB;AAWpB,IAAM,WAAW;AACjB,IAAM,aAAa;AACnB,IAAM,iBAAiB;AACvB,IAAM,MAAM;AAEZ,IAAM,UAAU,CAAC,QACf,sDAAsD,GAAG;AAE3D,SAAS,UAAU,GAAU,SAAiB;AAC5C,QAAM,OAAO,EAAE,QAAQ;AACvB,SAAO,SAAS,UACX,EAAE,QAAQ,WAAW,EAAE,OACvB,UAAU,EAAE,SAAS,EAAE;AAC9B;AACA,SAAS,aAAa,GAAU,SAAiB;AAC/C,SAAO,EAAE,MAAM,UAAU;AAC3B;AAEO,IAAM,UAAmB,OAAO,MAAM,QAAQ;AAGnD,QAAM,OAAO,KAAK,QAAS,WAAmB,SAAS;AAGvD,QAAM,QAAQ,MAAM,KAAK,IAAI,QAAQ;AACrC,QAAM,OAAc,QAAQ,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC,IAAI,CAAC;AAC9D,MAAI,CAAC,KAAK,OAAQ,QAAO,EAAE,YAAY,KAAK,MAAM,UAAU;AAE5D,QAAM,UAAU,MAAM,KAAK,IAAI,UAAU;AACzC,QAAM,SAAkB,UAAU,KAAK,MAAM,MAAM,QAAQ,KAAK,CAAC,IAAI,CAAC;AACtE,MAAI,CAAC,OAAO,OAAQ,QAAO,EAAE,YAAY,KAAK,MAAM,YAAY;AAEhE,QAAM,QAAQ,MAAM,KAAK,IAAI,cAAc;AAC3C,MAAI,OAA+B,QAC/B,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC,IAC7B,CAAC;AAGL,QAAM,OAAO,CAAC,GAAG,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,EAAE,MAAM,YAAY,CAAC,CAAC,CAAC;AAClE,QAAM,SAAiC,CAAC;AACxC,aAAW,KAAK,MAAM;AACpB,QAAI;AACF,YAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,CAAC;AAChC,YAAM,IAAI,MAAM,EAAE,KAAK;AACvB,aAAO,CAAC,IAAI,OAAO,EAAE,KAAK;AAAA,IAC5B,QAAQ;AAAA,IAAC;AAAA,EACX;AAGA,kBAAAA,QAAQ;AAAA,IACN;AAAA,IACA,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI;AAAA,EACd;AAGA,MAAI,SAAS;AACb,aAAW,KAAK,QAAQ;AACtB,UAAM,UAAU,OAAO,EAAE,MAAM,YAAY,CAAC,KAAK;AACjD,QAAI,CAAC,QAAS;AAEd,UAAM,QAAQ,UAAU,GAAG,OAAO;AAClC,UAAM,OAAO,QAAQ,aAAa,GAAG,OAAO;AAC5C,UAAM,UAAU,OAAO,IAAI,IAAI,OAAO,IAAI,KAAK;AAC/C,UAAM,UAAU,KAAK,EAAE,EAAE,KAAK;AAE9B,QAAI,WAAW,KAAK,UAAU,GAAG;AAC/B,YAAM,QAAQ,eAAe,EAAE,KAAK;AACpC,YAAM,OAAO,SAAS,QAAQ,IAAI,MAAM,EAAE,GAAG,KAAK;AAAA,QAChD;AAAA,MACF,CAAC,gBAAgB,QAAQ,QAAQ,CAAC,CAAC;AACnC,iBAAW,KAAK,MAAM;AACpB,YAAI;AACF,gBAAM,gBAAAA,QAAQ,iBAAiB,GAAG,KAAK,UAAU,EAAE,OAAO,KAAK,CAAC,CAAC;AACjE;AAAA,QACF,QAAQ;AAAA,QAAC;AAAA,MACX;AAAA,IACF;AACA,SAAK,EAAE,EAAE,IAAI;AAAA,EACf;AAGA,QAAM,KAAK,IAAI,gBAAgB,KAAK,UAAU,IAAI,GAAG;AAAA,IACnD,aAAa;AAAA,EACf,CAAC;AAED,SAAO,EAAE,YAAY,KAAK,MAAM,aAAa,MAAM,GAAG;AACxD;",
  "names": ["webpush"]
}
